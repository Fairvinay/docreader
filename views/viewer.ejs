<!DOCTYPE html>
<html dir="ltr" mozdisallowselectionprint>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="google" content="notranslate">
  <title>PDF.js viewer using built components</title>

  <style>
    .todown { 
      display:inline-block;
      color:#444;
      border:1px solid #CCC;
      background:#DDD;
      box-shadow: 0 0 5px -1px rgba(0,0,0,0.2);
      cursor:pointer;
      vertical-align:middle;
      max-width: 100px;
      padding: 5px;
      text-align: center;
    }
    body {
      background-color: #808080;
      margin: 0;
      padding: 0;
    }
    #viewerContainer {
      overflow: auto;
      position: absolute;
      width: 100%;
      height: 100%;
    }
    .pdfFixedDiv{
     position: fixed;
	 bottom: 10px;
	 left: 40%;
	}
	button {
  		background-color: #7C9DD6;
  		border: none;
  		color: white;
  		padding: 8px;
  		text-align: center;
  		text-decoration: none;
  		display: inline-block;
  		font-size: 60%;
	}
	input {
		padding: 7px;
		text-align: center;
		text-decoration: none;
		font-size: 50%;
		width: 8%;
	}
	button:hover {
		cursor: pointer;
	}
  </style>
  <!-- http://learnnewhere.unaux.com/pdfViewer/passwordviewer.html?i=1 
    passs == test

    https://github.com/bkeybmetz/BlobBuilder.js/blob/master/BlobBuilder.min.js

    pdfjs base64 to pdf
    https://stackoverflow.com/questions/12092633/pdf-js-rendering-a-pdf-file-using-a-base64-file-source-instead-of-url/12094943#12094943

    https://stackoverflow.com/questions/69923333/how-can-we-save-modified-pdf-file-from-mozilla-pdf-js-to-our-personal-servercro
    
    REACT Invocie from aalaam.com
    https://medium.com/@aalam-info-solutions-llp/creating-dynamic-pdfs-with-jspdf-and-customizing-autotables-in-react-a846a6f3fdca

    Mozilla pdf.js 
    https://github.com/mozilla/pdf.js/tree/master

    ApiTemplate.io 
    https://apitemplate.io/blog/how-to-convert-html-to-pdf-using-node-js/

    Save to pdf 
    https://stackoverflow.com/questions/76123070/how-can-i-save-a-part-of-webpage-as-a-pdf-using-javascript

    Currently USED 
    https://stackoverflow.com/questions/19783721/exporting-web-page-into-pdf-using-jspdf
    Canvas to base64 
    https://stackoverflow.com/questions/23959476/html-to-canvas-to-base64-to-pdf

    GENERATE PDF 
    https://stackoverflow.com/questions/78853162/saving-annotated-pdf-files-using-pdf-js

    jsPDF encryption 
    https://stackoverflow.com/questions/72582022/how-to-assign-encryption-property-to-jspdf-object

    encrypted password 
    https://medium.com/@patilchetan2110/password-encryption-and-decryption-in-node-js-using-bcrypt-package-5a7b1952d49d

    jspdf   JQUERY NEEDED 
    https://stackoverflow.com/questions/16858954/how-to-properly-use-jspdf-library
    https://jsfiddle.net/xzZ7n/4861/

      WORKKIN Pdf.js Mozilla loikn 
      https://mozilla.github.io/pdf.js/web/viewer.html

    basic download using PDFViewerApplication 
    https://stackoverflow.com/questions/41972485/how-to-download-a-pdf-file-to-local-disk-which-opened-in-html5-pdf-viewer

    pdfjs Download Manager
    https://stackoverflow.com/questions/67426323/using-pdf-js-to-render-a-pdf-but-it-doesnt-work-and-i-dont-get-any-error-messa




  -->
   <link rel="stylesheet" href="pdf_viewer.css">
   <script type="text/javascript" src="https://code.jquery.com/jquery-1.7.1.min.js"></script>
  <script src="pdf.js"></script>
  <script src="pdf_viewer.js"></script>
 
  <script src="./build/pdf.mjs" type="module"></script>
  <script type="text/javascript" src="js/jspdf.js"></script>
  <script type="text/javascript" src="libs/adler32cs.js"></script>
 <script type="text/javascript" src="libs/FileSaver.js"></script>
   <script type="text/javascript" src="libs/BlobBuilder.js"></script> 
  <script type="text/javascript" src="plugins/addimage.js"></script>
  <script type="text/javascript" src="plugins/standard_fonts_metrics.js"></script>
  <script type="text/javascript" src="plugins/split_text_to_size.js"></script>
  <script type="text/javascript" src="plugins/from_html.js"></script>
  <script type="text/javascript" src="js/basic.js"></script>
  <script src="viewerajax.js"></script> 
</head>

<body tabindex='1'>
  <div id='viewerContainer'>
    <div id='pdfViewer' class='pdfViewer pdf-view-wrapper'></div>
    <div class='pdfFixedDiv'>
  	<button id='pdfZoominbutton'>zoom in</button>
  	<button id='pdfZoomOutbutton'>zoom out</button>
  	<button id='pdfRotatebutton'>rotate</button>
    <button id='pdfDownload'>download</button>
  	<input type='text' id='pdfInput' placeholder='Go to page'></input>
    <div style="display:none"> 

      <button id='hidDecrypt'>process </button>
    </div>
   
     
    <div id="target">
    </div>
    <button id="download2">Press</button>   <button id="download1">PDF download</button>  <div id="todown" class="todown">Download</div>
  </div>
  </div>

  <script>
  var DEFAULT_URL =  " <%= serverfile %>" ; // 'E:/n/simpleChatApp/pdfViewer/pdf.pdf'; // '/pdf/pdf.pdf';
  var global_password ='';
  	if (!pdfjsLib.getDocument || !pdfjsViewer.PDFViewer) {
  alert("Library not imported");
}

pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.js';
var zoominbutton = document.getElementById("pdfZoominbutton");
var zoomoutbutton = document.getElementById("pdfZoomOutbutton");
var rotatebutton = document.getElementById("pdfRotatebutton");
var container = document.getElementById('viewerContainer');
var viewer = document.getElementById('pdfViewer');
var input = document.getElementById("pdfInput");
var DEFAULT_SCALE_SIZE = .15;


// (Optionally) enable hyperlinks within PDF files.
var pdfLinkService = new pdfjsViewer.PDFLinkService();

var pdfDowloader= '';
var pdfViewer = new pdfjsViewer.PDFViewer({
  container: container,
  viewer: viewer,
  linkService: pdfLinkService,
});
if (!pdfjsLib.getDocument || !pdfjsViewer.DownloadManager) {
  alert("Download not imported");
}
else{
  pdfDowloader  =  new pdfjsViewer.DownloadManager({
     downloadUrl : " <%= serverfile %>"
   });/**/
}

pdfLinkService.setViewer(pdfViewer);

document.addEventListener('pagesinit', function () {
  // We can use pdfViewer now, e.g. let's change default scale.
  pdfViewer.currentScaleValue = 'auto';
});

// Loading document.
var loadingTask = pdfjsLib.getDocument({
  url: DEFAULT_URL,
});
/*
// Create a new PDF object for this PDF.
var pdfObj = {
    'container': document.querySelector('.pdf-view-wrapper'),
    'document': null,
    'download': new pdfjsViewer.DownloadManager(),
    'eventBus': new pdfjsViewer.EventBus(),
    'history': null,
    'id': id,
    'linkService': null,
    'loaded': 0,
    'loader': null,
    'pageTotal': 0,
    'src': elem.dataset.pdf,
    'timeoutCount': 0,
    'viewer': null
};

// Update the eventBus to dispatch page change events to our own function.
pdfObj.eventBus.on( 'pagechanging', function pagechange(evt) { 
    updatePageInfo( evt );
} );
pdfObj.linkService = pdfLinkService;
pdfObj.viewer = pdfViewer;
pdfObj.linkService.setViewer( pdfObj.viewer );
*/
loadingTask.promise.then(function(pdfDocument) {
  // Document loaded, specifying document for the viewer and
  // the (optional) linkService.
  pdfViewer.setDocument(pdfDocument);

  pdfLinkService.setDocument(pdfDocument, null);
  
});

loadingTask.onPassword = function (updatePassword, reason) { 
      if (reason === 1) { // need a password
    		var new_password= prompt('Please enter a password:');
        global_password = new_password;
    		updatePassword(new_password);
  		} else { // Invalid password
    		var new_password= prompt('Invalid! Please enter a password:');
        global_password = new_password;
    		updatePassword(new_password);
  		}
       // SEND for DECRYPT AT SERVER END 
      $("#hidDecrypt").trigger('click');
      
   };
   

   zoominbutton.onclick = function() {
        var newScale = pdfViewer.currentScale + DEFAULT_SCALE_SIZE;
        pdfViewer.currentScaleValue = newScale;
         
    }

         
    zoomoutbutton.onclick = function() {
        var newScale = pdfViewer.currentScale - DEFAULT_SCALE_SIZE ;
        pdfViewer.currentScaleValue = newScale;
    }
    
    rotatebutton.onclick = function() {
        var rotateVal = ((pdfViewer.pagesRotation+90) >= 360) ? 0 : pdfViewer.pagesRotation+90 ;
        console.log(rotateVal);
        pdfViewer.pagesRotation = rotateVal;
    }
    
    input.addEventListener("keyup", function(event) {
        var val = Number(input.value);
  		if (event.keyCode === 13 && val) {
    		// Cancel the default action, if needed
    		event.preventDefault();
    		if(val > pdfViewer.pagesCount)
    		{
    			val = pdfViewer.pagesCount;
    		} 
    		console.log(val);
    		pdfViewer.currentPageNumber = val;
  		}
	});
	
	container.onscroll = function() {
    	input.value = pdfViewer.currentPageNumber;
	}
  </script>
  <script data-ad-client="ca-pub-3329553162349654" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  

</body>
</html>
<!-- 
 doc = new jsPDF({
 unit: 'pt', // set the unit of measurement to px
 format: 'a1', // set your paper size format
 userUnit:72, // set the DPI you desire. We used 72 because thats 
 the default DPI used in browsers.
  encryption: {
        userPassword:"1234sds@esdsdsds#22s5",
        ownerPassword:"797233232#2ewwe24",
       userPermissions:["print","copy"]
    } 
   });  //

-->